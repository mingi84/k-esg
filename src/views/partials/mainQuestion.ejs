<br>
<div id="progress">
    <div class="part on">
        <div class="desc"><span>기본정보</span></div>
        <div class="circle"><span>R</span></div>
        <div class="stepnumb"><span>1/1</span></div>
    </div>
    <div id="partP" class="part">
        <div class="desc"><span>정보공시</span></div>
        <div class="circle"><span>P</span></div>
        <div id="pstepnumb" class="stepnumb"><span>1/4</span></div>
    </div>
    <div id="partE" class="part">
        <div class="desc"><span>환경</span></div>
        <div class="circle"><span>E</span></div>
        <div id="estepnumb" class="stepnumb"><span>0/9</span></div>
    </div>
    <div id="partS" class="part">
        <div class="desc"><span>사회</span></div>
        <div class="circle"><span>S</span></div>
        <div id="sstepnumb" class="stepnumb"><span>0/9</span></div>
    </div>
    <div id="partG" class="part">
        <div class="desc"><span>지배구조</span></div>
        <div class="circle"><span>G</span></div>
        <div id="gstepnumb" class="stepnumb"><span>0/5</span></div>
    </div>
</div>


<div class="container">
    <div class="row">
        <div class="col-lg-6 mx-auto  mb-3 py-5 mx-5 px-5">
            <div class="titlesection text-center">
                <h1 id="questiontext" class="display-5 fw-bold lh-1 mb-3"></h1>
            </div>
            <br>
            <form class="needs-validation" novalidate="">
                <div class="row g-3">
                    <div id="divoptions" class="my-3">
                        <div class="form-check">
                            <input id="credit" name="paymentMethod" type="radio" class="form-check-input" required="">
                            <label class="form-check-label" for="credit">
                                조직이 어떠한 방식으로든 ESG 정보를 공시하지 않는 경우
                            </label>
                        </div>
                        <br>
                        <div class="form-check">
                            <input id="debit" name="paymentMethod" type="radio" class="form-check-input" required="">
                            <label class="form-check-label" for="debit">
                                조직의 홈페이지 지속가능경영보고서, 사업보고서, 기타 간행물 등에 ESG 정보를 분산하여 공시하고 있는 경우
                            </label>
                        </div>
                        <br>
                        <div class="form-check">
                            <input id="paypal" name="paymentMethod" type="radio" class="form-check-input" required="">
                            <label class="form-check-label" for="paypal">
                                조직의 홈페이지 지속가능경영보고서, 사업보고서, 기타 간행물 등에 ESG 정보를 통합하여 공시하고 있는 경우
                            </label>
                        </div>
                        <br>
                        <div class="form-check">
                            <input id="paypal" name="paymentMethod" type="radio" class="form-check-input" required="">
                            <label class="form-check-label" for="paypal">
                                ESG 정보를 통합한 조직의 홈페이지, 지속가능경영보고서, 사업보고서, 기타 간행물 등을 지정된 장소에 비치하거나, 특정 URL에 담고
                                있는
                                경우
                            </label>
                        </div>
                        <br>
                        <div class="form-check">
                            <input id="paypal" name="paymentMethod" type="radio" class="form-check-input" required="">
                            <label class="form-check-label" for="paypal">
                                "ESG 정보를 통합한 조직의 홈페이지, 지속가능경영보고서, 사업보고서, 기타 간행물 등의 발행여부를 '전자공시시스템-자율공시' 사항으로
                                알리는
                                경우"
                            </label>
                        </div>
                    </div>



                </div>
                <br>
                <br>

                <div id="divbuttons" class="mb-5">
                    <a type="button" class="btn btn-light btn-lg" href="/inforegister"><i class="fa fa-chevron-left"
                            aria-hidden="true"></i> 뒤로</a>
                    <a class="btn btn-primary btn-lg px-4 me-sm-3 float-end" onclick="getQuestion()">다음</a>
                </div>


                <!--
                <button class="w-100 btn btn-primary btn-lg" type="submit">Continue to checkout</button>
            -->
            </form>
        </div>
    </div>

</div>
<script>
    var questionumb = 0;
    var questionlist = {};
    var questtype = 0;
    var dataanswer = [];
    var reportdata = [];
    var titlelist = [];

    var myStorage = window.sessionStorage;
    var userID = myStorage.getItem("ID");

    $(document).ready(function () {
        // Code to be executed after the page has finished loading
        // Call your function or perform any desired operations here
        getQuestionList();
    });


    function getQuestionList() {
        // Your logic for making the call to the server
        // You can use jQuery's AJAX function to send a request to your server-side endpoint

        // Example using AJAX:
        $.ajax({
            url: '/questionssql',
            method: 'GET',
            dataType: 'json',
            success: function (data) {
                // Handle the response data
                console.log(data);
                splitdatajson(data);
            },
            error: function (error) {
                // Handle any errors
                console.error('Error:', error);
            }
        });
    }


    function splitdatajson(data) {
        console.log('split');
        questionlist = data;
        console.log(questionlist);

        getQuestion(0)
    }

    function getQuestion(questionumb) {
        var questdata = questionlist[questionumb];
        drawpage(questdata);
    }




    function drawpage(data) {
        console.log(data);
        questtype = data.type;
        var questionText = data.question + '<input type="text" id="scqidinput" value="'
            + data.ID + '@' + data.type + '@' + data.SCQID
            + '" style="display:none;"><input type="text" id="inputtitle" value="'
            + data.question + '" style="display:none;">';
        $('#questiontext').html(questionText);
        var part = data.SCQID.split("-");
        console.log('step number');
        console.log(questionumb);
        var spandivP = document.getElementById("pstepnumb");
        var spandivE = document.getElementById("estepnumb");
        var spandivS = document.getElementById("sstepnumb");
        var spandivG = document.getElementById("gstepnumb");

        spandivP.innerText = "1/4";
        spandivE.innerText = "0/9";
        spandivS.innerText = "0/9";
        spandivG.innerText = "0/5";




        if (questionumb > 0 && questionumb <= 3) {
            spandivP.innerText = questionumb + 1 + "/4";
        } else if (questionumb > 3 && questionumb <= 12) {
            spandivP.innerText = "4/4";
            spandivE.innerText = questionumb - 3 + "/9";
        } else if (questionumb > 12 && questionumb <= 21) {
            spandivP.innerText = "4/4";
            spandivE.innerText = "9/9";
            spandivS.innerText = questionumb - 12 + "/9";
        } else if (questionumb > 21 && questionumb <= 26) {
            spandivP.innerText = "4/4";
            spandivE.innerText = "9/9";
            spandivS.innerText = "9/9";
            spandivG.innerText = questionumb - 21 + "/5";
        }


        //progress bar
        switch (part[0]) {
            case "E":
                $("#partE").addClass('on');
                $("#partS").removeClass('on');
                $("#partG").removeClass('on');
                break
            case "S":
                $("#partS").addClass('on');
                $("#partG").removeClass('on');
                break
            case "G":
                $("#partG").addClass('on');
                break
            default:
                $("#partP").addClass('on');
                $("#partE").removeClass('on');
                $("#partS").removeClass('on');
                $("#partG").removeClass('on');
        }



        switch (data.type) {
            case 1:
                questtype = 1;
                questiontype1(data.answer);
                break;
            case 11:
                questiontype1(data.answer);
                break;
            case 5:
                questiontype5(data.answer);
                break;
            case 10:
                questiontype10(data.answer);
                break;
            default:
                questiontype1(data.answer);
        }

        var contentbuttons = "";
        console.log(questionumb);
        if (questionumb == 0) {
            contentbuttons = '<a type="button" class="btn btn-light btn-lg" href="/inforegister"><i class="fa fa-chevron-left"aria-hidden="true"></i> 뒤로</a><a class="btn btn-primary btn-lg px-4 me-sm-3 float-end" onclick="nextpage(' + questionumb + ')">다음</a>'
        } else if (questionumb + 1 == questionlist.length) {
            contentbuttons = '<a type="button" class="btn btn-light btn-lg" onclick=backpage('
                + questionumb
                + ')><i class="fa fa-chevron-left"aria-hidden="true"></i> 뒤로</a><a class="btn btn-primary btn-lg px-4 me-sm-3 float-end" onclick="senddataanswer()">다음</a>'
        } else {
            contentbuttons = '<a type="button" class="btn btn-light btn-lg" onclick=backpage(' + questionumb + ')><i class="fa fa-chevron-left"aria-hidden="true"></i> 뒤로</a><a class="btn btn-primary btn-lg px-4 me-sm-3 float-end" onclick="nextpage(' + questionumb + ')">다음</a>'
        }
        $('#divbuttons').html(contentbuttons);
    }

    function backpage() {
        questionumb = questionumb - 1;
        dataanswer.splice(questionumb, 1);
        reportdata.splice(questionumb, 1);
        titlelist.splice(questionumb, 1);
        getQuestion(questionumb);
    }

    function nextpage() {
        questionumb = questionumb + 1;
        console.log(questionumb);
        console.log(questtype);

        addansreport();

        getQuestion(questionumb);
    }



    function addansreport() {
        var titleinput = document.getElementById("inputtitle").value;
        titlelist.push(titleinput);

        if (questtype == 1) {
            var radios = document.getElementsByName('radiooption');
            var selectedValue = '';

            for (var i = 0; i < radios.length; i++) {
                if (radios[i].checked) {
                    selectedValue = radios[i].value;
                    break;
                }
            }
            console.log(selectedValue);



            var questSCQID = document.getElementById("scqidinput");
            var questvalue = questSCQID.value;
            var textanswer = questvalue + '@' + selectedValue;
            var splittextans = textanswer.split("@");
            console.log(splittextans);
            console.log(splittextans[0]);

            var objID = splittextans[0];
            var objType = splittextans[1]
            var objSCQID = splittextans[2];
            var objanswer = splittextans[3];
            var objpoint = splittextans[4];
            var sectionid = objSCQID.split("-")


            var jsondataans = {
                "ID": objID,
                "quest": {
                    "PESG": sectionid[0],
                    "SCQID": objSCQID,
                    "type": objType,
                    "answer": objanswer,
                    "point": parseInt(objpoint)
                }
            }
            var reportitem = {
                "PESG": sectionid[0],
                "point": parseInt(objpoint)
            }
            reportdata.push(reportitem);

            dataanswer.push(jsondataans);

        } else
            if (questtype == 5) {
                var checkedValues = [];
                // Listen for change event on the checkboxes

                // Iterate over the checkboxes using forEach
                $('input[type="checkbox"]').each(function (index, checkbox) {
                    // Check if the checkbox is checked
                    if ($(checkbox).is(':checked')) {
                        // Get the value of the checked checkbox
                        var value = $(checkbox).val();

                        // Push the value onto the list
                        checkedValues.push(value);
                    }
                });

                var objpoint = 0;
                console.log('check values type 5')
                console.log(checkedValues.length);
                switch (checkedValues.length) {
                    case 0:
                        objpoint = 0;
                        break
                    case 1:
                        objpoint = 0;
                        break
                    case 2:
                        objpoint = 25;
                        break
                    case 3:
                        objpoint = 50;
                        break
                    case 4:
                        objpoint = 75;
                        break
                    case 5:
                        objpoint = 100;
                        break
                    default:
                        objpoint = 0;
                }


                var questSCQID = document.getElementById("scqidinput");
                var questvalue = questSCQID.value;
                var textanswer = questvalue + '@' + selectedValue;
                var splittextans = textanswer.split("@");

                var objID = splittextans[0];
                var objType = splittextans[1]
                var objSCQID = splittextans[2];
                var sectionid = objSCQID.split("-");
                var objanswer = JSON.stringify(checkedValues);

                var jsondataans = {
                    "ID": objID,
                    "quest": {
                        "PESG": sectionid[0],
                        "SCQID": objSCQID,
                        "type": objType,
                        "answer": objanswer,
                        "point": objpoint
                    }
                }
                var reportitem = {
                    "PESG": sectionid[0],
                    "point": objpoint
                }
                reportdata.push(reportitem);

                dataanswer.push(jsondataans);
            } else
                if (questtype == 10) {

                    var checkedValues = [];
                    // Listen for change event on the checkboxes

                    // Iterate over the checkboxes using forEach
                    $('input[type="radio"]').each(function (index, radio) {
                        // Check if the checkbox is checked
                        if ($(radio).is(':checked')) {
                            // Get the value of the checked checkbox
                            var value = $(radio).val();

                            // Push the value onto the list
                            checkedValues.push(value);
                        }
                    });
                    console.log(checkedValues);



                    var questSCQID = document.getElementById("scqidinput");
                    var questvalue = questSCQID.value;
                    var textanswer = questvalue;
                    var splittextans = textanswer.split("@");
                    console.log(splittextans);
                    console.log(splittextans[0]);

                    var objID = splittextans[0];
                    var objType = splittextans[1];
                    var objSCQID = splittextans[2];
                    var sectionid = objSCQID.split("-");
                    var answerlist = []
                    var pointlist = []
                    for (l = 0; l < checkedValues.length; l++) {
                        var respoint = checkedValues[l].split("@");
                        answerlist.push(respoint[0]);
                        pointlist.push(parseInt(respoint[1]));
                    }



                    var objanswer = JSON.stringify(answerlist);
                    var objpoint = sumArray(pointlist);



                    var jsondataans = {
                        "ID": objID,
                        "quest": {
                            "PESG": sectionid[0],
                            "SCQID": objSCQID,
                            "type": objType,
                            "answer": objanswer,
                            "point": objpoint
                        }
                    }
                    var reportitem = {
                        "PESG": sectionid[0],
                        "point": objpoint
                    }
                    reportdata.push(reportitem);
                    dataanswer.push(jsondataans);

                }

        console.log(dataanswer);
        console.log(reportdata);
    }

    function sumArray(array) {
        var sum = 0;

        for (var i = 0; i < array.length; i++) {
            sum += array[i];
        }

        return sum;
    }


    function sumPointsByPESG(data) {
        const sumPoints = {};
        const itemCount = {};

        for (const item of data) {
            const { PESG, point } = item;

            // Calculate sum of points
            if (sumPoints[PESG]) {
                sumPoints[PESG] += point;
            } else {
                sumPoints[PESG] = point;
            }

            // Count number of items
            if (itemCount[PESG]) {
                itemCount[PESG] += 1;
            } else {
                itemCount[PESG] = 1;
            }
        }

        return { sumPoints, itemCount };
    }


    function senddataanswer() {
        console.log(dataanswer);
        addansreport();
        var resultSunPoint = sumPointsByPESG(reportdata)


        var responsedata = {
            "userID": userID,
            "epoints": JSON.stringify(dataanswer),
            "spoints": JSON.stringify(reportdata),
            "gpoints": JSON.stringify(resultSunPoint),
            "totalpoints": JSON.stringify(titlelist),
        }

        $.ajax({
            url: '/checkhistorysql',
            method: 'post',
            dataType: 'json',
            data: JSON.stringify(responsedata), // JSON body
            contentType: 'application/json', // Set content type to JSON
            success: function (data) {
                console.log(data);
                // Handle the response data
                var myStorage = window.sessionStorage;
                myStorage.setItem('report', JSON.stringify(resultSunPoint));

                window.location.href = '/report';
            },
            error: function (error) {
                // Handle any errors
                console.error('Error:', error);
            }
        });
    }

    function questiontype1(options) {
        console.log('questiontype1');
        console.log(options);
        var contenthtml = "";

        var optionlist = [];
        var answerlist = options.split("_");
        answerlist.forEach(option => {
            var oneoption = option.split("@");
            optionlist.push(oneoption);
        })
        console.log(optionlist);


        for (i = 0; i < optionlist.length; i++) {
            let opttext = optionlist[i][0]
            var point = optionlist[i][1]
            let optresult = opttext.replaceAll('"', '');

            contenthtml += '<div class="form-check"><input id="radiooption' + i + '" name="radiooption" type="radio" class="form-check-input" required="" value="'
                + optresult + '@' + point + '"><label class="form-check-label" for="radiooption' + i + '">'
                + optresult
                + '</label></div><br>';
        }
        $('#divoptions').html(contenthtml);
    }

    function questiontype5(options) {
        //multiselect
        console.log('questiontype5');
        console.log(options);
        var contenthtml = "";

        var optionlist = [];
        var answerlist = options.split("_");
        answerlist.forEach(option => {
            var oneoption = option.split("@");
            optionlist.push(oneoption);
        })
        console.log(optionlist);



        for (i = 0; i < optionlist.length; i++) {
            let opttext = optionlist[i][0]
            var point = optionlist[i][1]
            let optresult = opttext.replaceAll('"', '');


            contenthtml += '<div class="form-check"><input id="radiooption' + i + '" name="radiooption" type="checkbox" class="form-check-input" required="" value="'
                + optresult + '"><label class="form-check-label" for="radiooption' + i + '">'
                + optresult
                + '</label></div><br>';
        }
        $('#divoptions').html(contenthtml);
    }


    function questiontype10(options) {
        console.log('questiontype10');
        console.log(options);
        var contenthtml = "";

        var sections = options.split('_');

        var transformedSections = sections.map(function (section) {
            var parts = section.split('>');

            var subquesttitle = parts[0].trim();
            var options = parts[1].split('|');

            var transformedOptions = options.map(function (option) {
                var values = option.split('@').map(function (value) {
                    return value.trim();
                });

                return values;
            });

            return {
                subquesttitle: subquesttitle,
                options: transformedOptions
            };
        });

        for (i = 0; i < transformedSections.length; i++) {
            let opttext = transformedSections[i].options;

            //let optresult = opttext.replaceAll('"', '');
            console.log(options[i]);
            var selectradio = '';
            var selectlist = transformedSections[i].options;

            for (j = 0; j < selectlist.length; j++) {
                var point = selectlist[j][1]
                selectradio += '<input type="radio" class="btn-check" style="width:80%" name="options' + i + '" id="option' + i + j + '" autocomplete="off" value="' + selectlist[j][0] + '@' + point.replaceAll('”', '') + '"><label class="btn btn-outline-primary selectoption mx-1 my-2" for="option' + i + j + '">' + selectlist[j][0] + '</label>'
            }


            console.log(transformedSections[i].subquesttitle);

            contenthtml += '<div><h4>' + transformedSections[i].subquesttitle.replaceAll('“', '') + '</h4><div class="row mx-auto"style="">'
                + selectradio + '</div></div><br>'


        }
        $('#divoptions').html(contenthtml);
    }



</script>